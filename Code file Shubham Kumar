#include<stdio.h>
int main()
{
    long int n,i=0,j=0;
    printf("Enter Number of Processes : ");
    scanf("%ld",&n );
    double priority[n],burstTime[n],arrivalTime[n],waitingTime[n],turnaroundTime[n], process[n], temp, completionTime[n],min,sum=0,sum2=0,wait_final = 0.0, turnaround_final = 0.0, wait_avg, turnaround_avg;
    for(i=0;i<n;i++)
    {
        //Taking BurstTime and ArrivalTime from the user
        printf("\nEnter Burst Time for Process [%ld] : ", i+1 );
        scanf("%lf", &burstTime[i]);
        printf("Enter Arrival Time for Process [%ld] : ", i+1 );
        scanf("%lf", &arrivalTime[i] );
        process[i]=i+1;
    }
    long int k = 1;
    double b_time = 0;
    //Method to sort processes according to burst time depending on arrival time
    for(j=0;j<n;j++)
    {
        b_time = b_time + burstTime[j];
        min = burstTime[k];
        
        for(i=k;i<n;i++)
        {
            if((b_time >= arrivalTime[i])&&(burstTime[i]<min))
            {
                temp = burstTime[k];
                burstTime[k] = burstTime[i];
                burstTime[i] = temp;
                
                temp = arrivalTime[k];
                arrivalTime[k] = arrivalTime[i];
                arrivalTime[i] = temp;
                
                temp = process[k];
                process[k] = process[i];
                process[i] = temp;
            }
        }
        k++;
    }
    waitingTime[0] = 0;
    //Method for finding waiting time and average waiting time
    for(i=1;i<n;i++)
    {
        sum += burstTime[i-1];
        waitingTime[i] = sum - arrivalTime[i];
        wait_final += waitingTime[i];
    }
    wait_avg = wait_final/n;
    
    //Method for finding turn around time and average turn around time
    for(i=0;i<n;i++)
    {
        sum2 += burstTime[i];
        turnaroundTime[i] = sum2 - arrivalTime[i];
        turnaround_final += turnaroundTime[i];
    }
    turnaround_avg=turnaround_final/n;
    
    /* Now Priority = 1+ Waiting time / Estimated run time */
    
    completionTime[0] = burstTime[0];
    for(i=1;i<n;i++)
    {
        completionTime[i] = completionTime[i-1] + burstTime[i];
    }
    for(i=0;i<n;i++)
    {
        priority[i] = 1+waitingTime[i]/completionTime[i];
    }
    printf("\n\t| Process | Arrival Time | Burst Time |  Waiting Time  |  Turn Around Time  |\n");
    printf("\t  P[%0.0f]          %0.0lf           %0.0lf              %0.0lf                %0.0lf          \n",process[0],arrivalTime[0],burstTime[0],waitingTime[0],turnaroundTime[0]);
    for(i=n-1;i>0;i--)
    {
        printf("\t  P[%0.0lf]          %0.0lf           %0.0lf              %0.0lf                %0.0lf          \n",process[i],arrivalTime[i],burstTime[i],waitingTime[i],turnaroundTime[i]);
    }
    printf("\n\n\n\t\t\tAverage Turn Around Time : %lf",turnaround_avg);
    printf("\n\t\t\tAverage Waiting Time     : %lf\n\n",wait_avg);
    return 0;
}
